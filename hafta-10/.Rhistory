n = 50
x = runif(n, min=-2, max=2)
print(x)
x = sort(x) # küçükten büyüğe sıra
print(x)
mean(rnorm(n))
std(rnorm(n))
sd(rnorm(n))
y = x^3 + rnorm(n) # xKüp + normal dağılım(ortalama 0, standart sapması 1)
print(y)
# plot
plot(x,y) # grafik oluştur
plot(x,y,type="l")
plot(x,y,type="p") # point plot(scatter) - nokta grafiği
plot(x, y, main="x ve y grafiği y=x^3+rnorm")
plot(x, y, main="x ve y grafiği y=x^3+rnorm", xlab="x ekseni", ylab="y ekseni")
plot(x, y, pch=19)
plot(x, y, type="l", lty=1)
plot(x, y, type="l", lty=2)
plot(x, y, type="l", lty=2, lwd=3)
plot(x, y, pch=19, col=1)
plot(x, y, pch=19, col=2)
plot(x, y, pch=19, col="blue")
# Çoklu grafikler
par(mfrow(2,2)) # Grid elemanlarını belirle 2 satır, 2 kolon
# Çoklu grafikler
par(mfrow=c(2,2)) # Grid elemanlarını belirle 2 satır, 2 kolon
plot(x,y, main="Plot-1", pch=20, col="red")
plot(x,y, main="Plot-2", pch=20, col="blue")
plot(rev(x),y, main="Plot-3", pch=20, col="blue")
plot(rev(x),y, main="Plot-4", pch=20, col="red")
par("mar")
# Çoklu grafikler
par(mar=c(1,1,1,1))
par(mfrow=c(2,2)) # Grid elemanlarını belirle 2 satır, 2 kolon
plot(x,y, main="Plot-1", pch=20, col="red")
plot(x,y, main="Plot-2", pch=20, col="blue")
plot(rev(x),y, main="Plot-3", pch=20, col="blue")
plot(rev(x),y, main="Plot-4", pch=20, col="red")
getwd()
setwd("C:/dersler/bahar/YBS108/hafta-10")
getwd()
png(filename = "grafik.png")
par(mfrow=c(2,2)) # Grid elemanlarını belirle 2 satır, 2 kolon
plot(x,y, main="Plot-1", pch=20, col="red")
plot(x,y, main="Plot-2", pch=20, col="blue")
plot(rev(x),y, main="Plot-3", pch=20, col="blue")
plot(rev(x),y, main="Plot-4", pch=20, col="red")
grafics.off()
png(filename = "grafik.png")
par(mfrow=c(2,2)) # Grid elemanlarını belirle 2 satır, 2 kolon
plot(x,y, main="Plot-1", pch=20, col="red")
plot(x,y, main="Plot-2", pch=20, col="blue")
plot(rev(x),y, main="Plot-3", pch=20, col="blue")
plot(rev(x),y, main="Plot-4", pch=20, col="red")
dev.off()
# Histogram
hist(x)
hist(x, col="blue", freq = TRUE)
par(mfrow=c(1))
par(mfrow=c(1,1))
hist(x, col="blue", freq = TRUE)
hist(x, col="blue", freq = TRUE)
hist(x, col="blue", freq = TRUE)
plot(x,y)
# ggplot grafik kütüphanesi
# install.packages("ggplot2")
library(ggplot2)
data("midwest", package="ggplot2")
force(midwest)
View(midwest)
plot(x,y)
dev.off()
x
y
plot(x,y)
plot(x,y, pch=20, col="blue")
names(midwest)
ggplot(midwest, aes(x=area, y=poptotal))
ggplot(midwest, aes(x=area, y=poptotal)) + geom_point()
ggplot(midwest, aes(x=area, y=poptotal)) + geom_point() + xlim(c(0, 0.1)) + ylim(c(0, 1000000))
g = ggplot(midwest, aes(x=area, y=poptotal)) + geom_point()
g
g = ggplot(midwest, aes(x=area, y=poptotal)) + geom_point()
g = g + xlim(c(0, 0.1)) + ylim(c(0, 1000000))
g = g + ggtitle("Alan - Nüfus İlişkişi", subtitle = "Kaynak: Midwest verisi")
g = g + xlab("Alan") + ylab("Nüfus")
g # grafik çıktısını görmek için
g = ggplot(midwest, aes(x=area, y=poptotal)) + geom_point(col="steelblue")
g = g + xlim(c(0, 0.1)) + ylim(c(0, 1000000))
g = g + ggtitle("Alan - Nüfus İlişkişi", subtitle = "Kaynak: Midwest verisi")
g = g + xlab("Alan") + ylab("Nüfus")
g # grafik çıktısını görmek için
g = ggplot(midwest, aes(x=area, y=poptotal)) + geom_point(col="steelblue", size=3)
g = g + xlim(c(0, 0.1)) + ylim(c(0, 1000000))
g = g + ggtitle("Alan - Nüfus İlişkişi", subtitle = "Kaynak: Midwest verisi")
g = g + xlab("Alan") + ylab("Nüfus")
g # grafik çıktısını görmek için
g = ggplot(midwest, aes(x=area, y=poptotal)) + geom_point(aes(col=state), size=3)
g = g + xlim(c(0, 0.1)) + ylim(c(0, 1000000))
g = g + ggtitle("Alan - Nüfus İlişkişi", subtitle = "Kaynak: Midwest verisi")
g = g + xlab("Alan") + ylab("Nüfus")
g # grafik çıktısını görmek için
g = ggplot(midwest, aes(x=area, y=poptotal))
g = g + geom_point(aes(col=state), aes(size=percollege))
g = g + xlim(c(0, 0.1)) + ylim(c(0, 1000000))
g = g + ggtitle("Alan - Nüfus İlişkişi", subtitle = "Kaynak: Midwest verisi")
g = g + xlab("Alan") + ylab("Nüfus")
g # grafik çıktısını görmek için
g = ggplot(midwest, aes(x=area, y=poptotal))
g = g + geom_point(aes(col=state), aes(size=percollege/10))
g = g + xlim(c(0, 0.1)) + ylim(c(0, 1000000))
g = g + ggtitle("Alan - Nüfus İlişkişi", subtitle = "Kaynak: Midwest verisi")
g = g + xlab("Alan") + ylab("Nüfus")
g # grafik çıktısını görmek için
g = ggplot(midwest, aes(x=area, y=poptotal))
g = g + geom_point(aes(col=state), size = percollege)
g = g + xlim(c(0, 0.1)) + ylim(c(0, 1000000))
g = g + ggtitle("Alan - Nüfus İlişkişi", subtitle = "Kaynak: Midwest verisi")
g = g + xlab("Alan") + ylab("Nüfus")
g # grafik çıktısını görmek için
# Eyaletlerin farklı renklerde gösterilmesi
g = ggplot(midwest, aes(x=area, y=poptotal)) + geom_point(aes(col=state), size=3)
g = g + xlim(c(0, 0.1)) + ylim(c(0, 1000000))
g = g + ggtitle("Alan - Nüfus İlişkişi", subtitle = "Kaynak: Midwest verisi")
g = g + xlab("Alan") + ylab("Nüfus")
g # grafik çıktısını görmek için
g = ggplot(midwest, aes(x=area, y=poptotal, size=percollege)) + geom_point(aes(col=state))
g = g + xlim(c(0, 0.1)) + ylim(c(0, 1000000))
g = g + ggtitle("Alan - Nüfus İlişkişi", subtitle = "Kaynak: Midwest verisi")
g = g + xlab("Alan") + ylab("Nüfus")
g # grafik çıktısını görmek için
# Başka bir örnek
data(mpg)
force(mpg)
View(mpg)
ggplot(mpg, aes(x=factor(cyl))) + geom_bar(stat="count")
data("mtcars")
force(mtcars)
View(mtcars)
ggplot(mpg, aes(x=factor(cyl), y=mpg)) + geom_point()
ggplot(mpg, aes(x=cyl, y=mpg)) + geom_point()
ggplot(mtcars, aes(x=cyl, y=mpg)) + geom_point()
ggplot(mtcars, aes(x=cyl, y=mpg)) + geom_point(aes(col=gear))
fonksiyon_adi = function(x){
return (x*2)
}
fonksiyon_adi(3)
ikiRakamTopla = function(a, b){
return (a + b)
}
ikiRakamTopla(5,9) #14
ikiRakamTopla = function(a, b=3){
return (a + b)
}
ikiRakamTopla(2) # 5
x = 8
topla_func = function(y){
x = x + y
return(x)
}
topla_func(c(1,2,3))
global_deger_degistir =function(){
x = 3
}
global_deger_degistir()
print(x)
str = paste(str1,str2,sep=",") # Elma,Portakal
str1 = "Elma"
str2 = "Portakal"
str = paste(str1,str2,sep=",") # Elma,Portakal
a <- 5 # a=5
print(a)
a = b = c = 6
a = b = c = d = 2
print ( a + b)
a = 'elma'
a = "elma"
a = 2
a == 2
nchar('elma')
c("Elma","Armut","Kivi")
Data_Frame <- data.frame (
Training = c("Strength", "Stamina", "Other"),
Pulse = c(100, 150, 120),
Duration = c(60, 30, 45)
)
# Print the data frame
Data_Frame
poker_vector <- c(140, -50, 20, -120, 240)
names(poker_vector) <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
print(poker_vector)
poker_vector[['Monday']]
poker_vector[['Monday','Tuesday']]
poker_vector[1:3]
View(mpg)
a <- c(100, 10, 1000)
order(a)
class(a)
class(mpg)
class(TRUE)
x <- c("Tue", "Thu", "Tue", "Mon", "Thu")
factor(x)
tally(factor(x))
summary(factor(x))
factor(x)
matrix(1:9, byrow = TRUE, nrow = 3)
name <- c("Python", "R", "SQL")
type <- c("Practice", "Project", "Lecture")
number <- c(100, 430, 200)
courses_df <- data.frame(name, type, number)
print(courses_df)
subset(courses_df, number<300)
